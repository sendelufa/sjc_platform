stages:
  - test
  - build jar
  - build and push docker image
  - deploy

variables:
  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=./.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"

cache:
  paths:
    - ./.m2/repository
  # keep cache across branch
  key: "$CI_BUILD_REF_NAME"


test_job:
  image: maven:3.6.2-jdk-11-slim
  stage: test
  script:
    - pwd
    - mvn clean
    - mvn compile
    - mvn test
  tags:
    - test
  only:
    - master
build:
  image: maven:3.6.2-jdk-11-slim
  stage: build jar
  script:
    - mvn clean install -Dspring.profiles.active=prod && mvn package -B -e -Dspring.profiles.active=prod
  artifacts:
    paths:
      - target/*.jar
  only:
    - master
docker build:
  services:
    - docker:19.03.13-dind
  image: docker:19.03.13-dind
  stage: build and push docker image
  script:
    - docker build --build-arg SPRING_ACTIVE_PROFILE=prod -t $DOCKER_REPO:latest .
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - docker push $DOCKER_REPO:latest
  only:
    - master
deploy:
  when: manual
  image: ubuntu:latest
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - pwd
    - ssh mone@$SERVER -p 2223 "docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io; docker stop $APP_NAME; docker system prune -a -f; docker run --name mysql --network host --env-file=mysql.env --volume=mysql-data:/var/lib/mysql -d mysql:latest; docker pull $DOCKER_REPO:latest; docker-compose up -d; docker logout"
  only:
    - master
